%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Value declarations}
\label{sec:value-declaration}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RuleDef{value declarations}{
  \Literal{values}, \Sequence{\RuleRef{value definition}}
}

\RuleDef{value definition}{
  \Optional{\RuleRef{qualifier}}, \RuleRef{bindable pattern}, \Optional{\Literal{:}, \RuleRef{type}}, \Literal{=}, \RuleRef{expression}
}

\RuleDef{qualifier}{
  \Literal{private} \\
  \Alt\ \Literal{protected} \\
  \Alt\ \Literal{public} \\
  \Alt\ \Literal{logical}
}

% \begin{verbatim}
% values
%   public n = 10;
%   private p: int = -10;
%   protected x: int in {-127,...,127}
% \end{verbatim}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Channel declarations}
\label{sec:channel-declaration}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RuleDef{channel declarations}{
  \Literal{channels}, \Sequence{\RuleRef{channel name declaration}}
}

\RuleDef{channel name declaration}{
  \xSepList{,}{\RuleRef{identifier}}, \Optional{\Literal{:}, \RuleRef{type}}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Chanset declarations}
\label{sec:chanset-declaration}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RuleDef{chanset declarations}{
  \Literal{chansets}, \Sequence{\RuleRef{chanset definition}}
}

\RuleDef{chanset definition}{
  \RuleRef{identifier}, \Literal{=}, \RuleRef{chanset expression}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Class declaration}
\label{sec:class-declaration}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RuleDef{class declaration}{
  \Literal{class}, \RuleRef{identifier}, \Optional{\Literal{extends}, \RuleRef{identifier}}, \Literal{=},\\
  \qquad \Literal{begin}, \Sequence{\RuleRef{class paragraph}}, \Literal{end}
}

\RuleDef{class paragraph}{
  \RuleRef{type declarations} \\
  \Alt\ \RuleRef{value declarations} \\
  \Alt\ \RuleRef{function declarations} \\
  \Alt\ \RuleRef{operation declarations} \\
  \Alt\ \RuleRef{state declarations} \\
  \Alt\ \Literal{initial}, \RuleRef{operation definition}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Nameset declarations}
\label{sec:nameset-declaration}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RuleDef{nameset declarations}{
  \Literal{namesets}, \Sequence{\RuleRef{nameset definition}}
}

\RuleDef{nameset definition}{
  \RuleRef{identifier}, \Literal{=}, \RuleRef{nameset expression}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{State declarations}
\label{sec:state-declaration}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RuleDef{state declarations}{
  \Literal{state}, \Sequence{\RuleRef{instance variable definition}} 
}

\RuleDef{instance variable definition}{
  \Optional{\RuleRef{qualifier}}, \RuleRef{assignment definition} \\
  \Alt\ \RuleRef{invariant definition}
}

\RuleDef{assignment definition}{
  \RuleRef{identifier}, \Literal{:}, \RuleRef{type}, \Optional{\Literal{:=}, \RuleRef{expression} } \\
  \Alt\ \RuleRef{identifier}, \Literal{:}, \RuleRef{type}, \Optional{\Literal{in}, \RuleRef{expression} }
}

\RuleDef{invariant definition}{
  \Literal{inv}, \RuleRef{expression}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Process declaration}
\label{sec:process-declaration}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RuleDef{process declaration}{
  \Literal{process}, \RuleRef{identifier}, \Literal{=}, \Optional{\RuleRef{parametrisation}, \Literal{@}}, \RuleRef{process}
}

Note: the only parametrisation qualifier allowed in a process declaration is \Literal{val}.  (Omitting a parametrisation qualifier defaults to \Literal{val}, and is permitted as well.)

\RuleDef{parametrisation}{
  \Optional{\RuleRef{parametrisation qualifier}}, \CommaSepList{\RuleRef{identifier}},
    \Literal{:}, \RuleRef{type}
}

\RuleDef{parametrisation qualifier}{
  \Literal{val} \\
  \Alt\ \Literal{res} \\
  \Alt\ \Literal{vres}
}

%% \RuleDef{single type declaration}{
%%   \CommaSepList{\RuleRef{identifier}}, \Literal{:}, \RuleRef{type}
%% }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Action declarations}
\label{sec:action-declaration}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RuleDef{action declarations}{
  \Literal{actions}, \Sequence{\RuleRef{action definition}}
}

\RuleDef{action definition}{
  \RuleRef{identifier}, \Literal{=}, \Optional{ \RuleRef{parametrisation}, \Literal{@} }, \RuleRef{action}
}
